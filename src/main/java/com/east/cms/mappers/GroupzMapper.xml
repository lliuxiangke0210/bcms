<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.east.cms.dao.GroupzMapper">
  <resultMap id="BaseResultMap" type="com.east.cms.model.Groupz">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, descr
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from groupz
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from groupz
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.east.cms.model.Groupz">
    insert into groupz (id, name, descr
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{descr,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.east.cms.model.Groupz">
    insert into groupz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="descr != null">
        descr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.east.cms.model.Groupz">
    update groupz
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.east.cms.model.Groupz">
    update groupz
    set name = #{name,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- *****************************************************  -->
  
  <select id="listGroup"  resultType="com.east.cms.model.Groupz"> 
    select * from groupz
  </select>
  
  <delete id="deleteGroupUsers" parameterType="java.lang.Integer" >
    delete from user_group where groupId=#{groupId}
  </delete>
  
  <insert id="addGroupChannel">
   insert into  group_channel (groupId, channelId) values (#{group.id}, #{channel.id})
  </insert>
  
  <insert id="loadGroupChannelById">
   select gc.id ,
          gc.groupId,
          gc.channelId,
          g.`name`,
          g.descr,
          c.channelName,
          c.isCustomLink,
          c.customLinkUrl,
          c.channelType,
          c.isIndex,
          c.isTopNav,
          c.isRecommend,
          c.channelStatus,
          c.orders,
          c.parentId,
          c.navOrder
   from group_channel gc 
   left join groupz g on(gc.groupId=g.id) 
   left join channel c on (gc.channelId=c.id) 
   where gc.groupId=#{groupId} and gc.channelId=#{channelId}  
   </insert>
  
  <delete id="clearGroupChannel" parameterType="java.lang.Integer">
     delete from  group_channel where groupId=#{groupId}
  </delete>
  
  <delete id="deleteGroupChannel" >
    delete from  group_channel where groupId=#{groupId} and channelId=#{channelId}
  </delete>
  
  <select id="listGroupChannelIds" parameterType="java.lang.Integer" >
    select channelId from group_channel where groupId=#{groupId}
  </select>
  
  <select id="generateGroupChannelTree" parameterType="java.lang.Integer" 
   resultType="com.east.cms.model.ChannelTree" >
     select c.id,
            c.channelName,
            c.parentId 
     from group_channel gc 
     left join channel c on(gc.channelId=c.id) 
     where gc.groupId=#{groupId}
  </select>
  
  <select id="generateUserChannelTree" parameterType="java.lang.Integer"  
  resultType="com.east.cms.model.ChannelTree" >
  select distinct   c.id ,
         c.channelName,
         c.parentId  
  from group_channel gc 
  left join channel c on(gc.channelId=c.id) 
  left join user_group ug on (gc.groupId=ug.groupId) 
  where ug.userId=#{userId}
  </select>
  
  
</mapper>

